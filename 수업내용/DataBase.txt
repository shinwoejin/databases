Table 간 관계 측면
SQL(Structured Query Lanaguage) : 관계형 기반, Table & Record
NoSQL : Document-oriented. key-value 기반, Collection & Document
중간 규모 앱에 SQL vs NoSQL 성능 유사.

기술 적용 측면
ORM(Object-Relational Mapper), ODM(Object-Document Mapper)
사용 편의성 : DB 추상화 레이어, SQL 직관적 변경 가능.
도메인  변환 시 약간의 성능 저하.
호환성 : 개발과 제품 플랫폼 사용 가능 여부 확인.

DBMS 종류
RDB : Oracle, MySQL, MariaDB, PostgreSQL, Sqlite
NoSQL : MongoDB 와 CouchBase, Cassandra 와 HBase
In-memory DB : memcached, Redis(REmote Dlctionary System)

RDB, NoSQL : file 에 저장
In-memory DB : 메모리에 저장

SELECT COUNT(DISTINCT Country) FROM Customers;
DISTINCT 로 중복 제거후 조회
select문 뒤에 where 절에
(=)(>)(<)(!=)(<>)사용
BETWEEN	: Between a certain range
ex) SELECT * FROM Customers
WHERE : CustomerID BETWEEN 10 AND 20;(10포함 20까지 출력)
LIKE	Search for a pattern ('%문자%')('문자%')
IN : To specify multiple possible values for a column	
ex) SELECT * FROM Customers
    WHERE CUSTOMERID IN(SELECT CustomerID FROM Customers
					WHERE Country = 'Canada');
SELECT * FROM Customers
WHERE Country = 'USA'
ORDER BY City DESC, PostalCode, CustomerID;
DESC = 내림차순 ASC = 올림차순 한글도 가능

SELECT SUM(Price) FROM Products; 총합
SELECT AVG(Price) FROM Products; 평균
SELECT MAX(Price) FROM Products; 가장 높은값
SELECT MIN(Price) FROM Products; 가장 낮은값

MySQL LIMIT 절
 LIMIT절은 반환할 레코드 수를 지정하는 데 사용됩니다.
 LIMIT절은 수천 개의 레코드가 있는 큰 테이블에 유용합니다. 많은 수의 레코드를 반환하면 성능에 영향을 줄 수 있습니다.
 ex) SELECT NAME FROM ANIMAL_INS
ORDER BY DATETIME ASC LIMIT 1; 상위 한줄만 출력

SELECT 집합적 개념

SELECT CURDATE();
SELECT CURRENT_DATE(); : 날짜만
SELECT CURRENT_TIME(); 
SELECT NOW(); : 시간만
SELECT DATE("2017-06-15");
 = 날짜/시간 식에서 날짜 부분을 추출합니다.
 SELECT DATE_FORMAT("2017-06-15", "%Y");
 SELECT DATE_FORMAT("2017-06-15", "%Y-%M-%D");  
 =  "%Y" 날짜 형식 지정 Y 년도만 출력됨
SELECT DATE_ADD("2017-06-15", INTERVAL $$ DAY);    
=  $$ 만큼 추가되서  2017-06-25일됨
SELECT HOUR("2017-06-20 09:34:00");
= HOUR 만 출력됨
SELECT MINUTE("2017-06-20 09:34:00");
= MINUTE 만 출력
SELECT SECOND("2017-06-20 09:34:00.000023");
= SECOND 만 출력
SELECT CustomerName, CONCAT(Address, " ", PostalCode, " ", City) AS Address
FROM Customers;
= Adress 에 Adress, PostalCode, City 가 합쳐서 나옴
SUBSTR(), SUBSTRING() 둘중 하나로 쓸때 통일하기
SELECT SUBSTRING("SQL Tutorial", 5, 3) AS ExtractString;
= 5번째부터 3개 추출

SELECT OrderID, Quantity,
(CASE WHEN Quantity > 30 THEN 'The quantity is greater than 30'
WHEN Quantity = 30 THEN 'The quantity is 30'
ELSE 'The quantity is under 30'
END) AS QuantityText
FROM OrderDetails
ORDER BY OrderID ASC;

OrderID	Quantity	QuantityText
10248	12	The quantity is under 30
10249	40	The quantity is greater than 30
10255	30	The quantity is 30

SELECT Orders.OrderID, Customers.CustomerName, Orders.OrderDate
FROM Orders
INNER JOIN Customers
ON Orders.CustomerID=Customers.CustomerID;

OrderID	CustomerName	        OrderDate
10248	Wilman Kala	            1996-07-04
10249	Tradição Hipermercados	1996-07-05
10250	Hanari Carnes	        1996-07-08

SELECT Orders.OrderID, Shippers.ShipperName, Shippers.Phone
FROM Orders
INNER JOIN Shippers
ON Orders.ShipperID = Shippers.ShipperID 
AND Shippers.ShipperID = 2
;

Number of Records: 326
OrderID	ShipperName	     Phone
10250	United Package	(503) 555-3199
10252	United Package	(503) 555-3199
10253	United Package	(503) 555-3199

